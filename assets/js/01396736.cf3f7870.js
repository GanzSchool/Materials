"use strict";(self.webpackChunkganz_school_materials=self.webpackChunkganz_school_materials||[]).push([[6884],{1629:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>k,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>i});const l=JSON.parse('{"id":"Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/index","title":"Callback f\xfcggv\xe9nyek","description":"1. A callback f\xfcggv\xe9nyek meghat\xe1roz\xf3 szerepe","source":"@site/docs/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/index.md","sourceDirName":"Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel","slug":"/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/","permalink":"/Materials/docs/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/","draft":false,"unlisted":false,"editUrl":"https://github.com/GanzSchool/Materials/edit/main/docs/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/index.md","tags":[],"version":"current","frontMatter":{"title":"Callback f\xfcggv\xe9nyek","sidebar_label":"Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel"},"sidebar":"mySidebar","previous":{"title":"Javascript Aszinkron M\u0171k\xf6d\xe9se","permalink":"/Materials/docs/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/03.1.3"},"next":{"title":"Id\u0151z\xedt\u0151 f\xfcggv\xe9nyek","permalink":"/Materials/docs/Webprogramoz\xe1s/JavaScript/03 Halad\xf3/13 Aszinkron Javascript/13.1 Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel/13.1.1 Id\u0151z\xedt\u0151 f\xfcggv\xe9nyek/"}}');var n=t(4848),s=t(8453);const r={title:"Callback f\xfcggv\xe9nyek",sidebar_label:"Aszinkron programoz\xe1s Callbackek seg\xedts\xe9g\xe9vel"},o=void 0,k={},i=[];function g(e){const a={code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{Details:t}=a;return t||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"1. A callback f\xfcggv\xe9nyek meghat\xe1roz\xf3 szerepe"})}),"\n",(0,n.jsx)(a.p,{children:"A JavaScript aszinkron programoz\xe1s\xe1nak alapja a callback f\xfcggv\xe9nyek haszn\xe1lata. A callback egy olyan f\xfcggv\xe9ny, amelyet el\u0151sz\xf6r te \xedrsz meg, majd \xe1tadsz egy m\xe1sik f\xfcggv\xe9nynek. Ez a m\xe1sik f\xfcggv\xe9ny k\xe9s\u0151bb megh\xedvja (\u201evisszah\xedvja\u201d) a te f\xfcggv\xe9nyedet, amikor egy bizonyos felt\xe9tel teljes\xfcl vagy egy aszinkron esem\xe9ny bek\xf6vetkezik. Amikor a callback f\xfcggv\xe9nyedet megh\xedvj\xe1k, \xe9rtes\xedt\xe9st kapsz a felt\xe9telr\u0151l vagy az esem\xe9nyr\u0151l, \xe9s gyakran a megh\xedv\xe1s sor\xe1n olyan argumentumokat is \xe1tadnak, amelyek tov\xe1bbi r\xe9szleteket tartalmaznak. Ez a folyamat k\xf6nnyebben \xe9rthet\u0151 n\xe9h\xe1ny konkr\xe9t p\xe9ld\xe1n kereszt\xfcl, \xe9s a k\xf6vetkez\u0151 alfejezetek bemutatj\xe1k a callback-alap\xfa aszinkron programoz\xe1s k\xfcl\xf6nb\xf6z\u0151 form\xe1it."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"2. A callbackek \xe9s az aszinkron folyamatok"})}),"\n",(0,n.jsx)(a.p,{children:"A callbackek gyakran seg\xedtenek felosztani a bonyolultabb feladatokat kisebb, k\xf6nnyebben karbantarthat\xf3 egys\xe9gekre. \xcdgy a k\xf3dban tiszt\xe1n elv\xe1laszthat\xf3, hogy melyik r\xe9sz felel p\xe9ld\xe1ul egy adat bet\xf6lt\xe9s\xe9\xe9rt, \xe9s melyik dolgozza fel az \xedgy kapott eredm\xe9nyeket. Ez az\xe9rt praktikus, mert a JavaScript \xe1ltal\xe1nos fut\xe1sidej\xe9ben az esem\xe9nyhurkon (event loop) kereszt\xfcl t\xf6rt\xe9nik a feladatok v\xe9grehajt\xe1sa, \xe9s sokszor nem lehet tudni el\u0151re, pontosan mikor k\xe9sz\xfcl el egy aszinkron m\u0171velet."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"3. A callbackek el\u0151nyei \xe9s a \u201ccallback hell\u201d"})}),"\n",(0,n.jsx)(a.p,{children:"Nagy el\u0151ny, hogy a callbackek k\xf6nnyen alkalmazhat\xf3k b\xe1rmilyen funkci\xf3 megh\xedv\xe1s\xe1ra, \xe9s rugalmasan alak\xedthat\xf3k. A gyakorlatban azonban okozhatnak n\xe9mi k\xf3d-\xe1ttekinthet\u0151s\xe9gi gondot, f\u0151leg akkor, ha egym\xe1sba \xe1gyazottan ker\xfclnek megh\xedv\xe1sra. Ezt a jelens\xe9get gyakran \u201ecallback hellnek\u201d nevezik, mert t\xfals\xe1gosan m\xe9lyen egym\xe1sba \xe1gyazott strukt\xfar\xe1t hoz l\xe9tre, amit neh\xe9z k\xf6vetni \xe9s m\xf3dos\xedtani. Erre manaps\xe1g m\xe1r rendelkez\xe9sre \xe1llnak modernebb konstrukci\xf3k (p\xe9ld\xe1ul a Promise, az async\u2013await), de a callback tov\xe1bbra is az egyik alapk\xf6ve a JavaScript nyelvnek."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"4. A callback funkci\xf3k \xe1tad\xe1sa \xe9s megh\xedv\xe1sa"})}),"\n",(0,n.jsx)(a.p,{children:"Callbacknek b\xe1rmi kinevezhet\u0151, ami f\xfcggv\xe9nyk\xe9nt m\u0171k\xf6dik, \xe9s param\xe9terk\xe9nt \xe1tadhat\xf3. A gyakorlatban teh\xe1t nincs sz\xfcks\xe9g speci\xe1lis kulcssz\xf3ra vagy le\xedr\xe1sra a deklar\xe1ci\xf3 sor\xe1n, csup\xe1n fontos, hogy a c\xe9lf\xfcggv\xe9ny helyes id\u0151ben \xe9s helyes k\xf6r\xfclm\xe9nyek k\xf6z\xf6tt megkapja \xe9s megh\xedvja az \xe1tadott callbacket. A megval\xf3s\xedt\xe1s \xe1ltal\xe1ban valahogy \xedgy n\xe9z ki: defini\xe1l\xf3dik egy f\xfcggv\xe9ny, amely tegy\xfck fel, hogy aszinkron m\xf3don bet\xf6lt egy t\xe1voli forr\xe1sb\xf3l valamilyen adatot, majd ha megkapta, megh\xedv egy el\u0151re meg\xedrt, param\xe9terk\xe9nt kapott f\xfcggv\xe9nyt, ami az adatot feldolgozza. Ezzel a m\xf3dszerrel a k\xf3d megmarad modul\xe1risnak, \xe9s egyszerre t\xf6bb m\u0171velet is v\xe9gezhet\u0151 p\xe1rhuzamosan."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"5. Az \u201cerror-first callback\u201d minta"})}),"\n",(0,n.jsx)(a.p,{children:"Gyakori minta az \xfagynevezett \u201cerror-first callback\u201d. Ilyenkor a callback els\u0151 param\xe9tere az esetleges hibaobjektum, a m\xe1sodik vagy a tov\xe1bbi param\xe9ter(ek) pedig az eredm\xe9ny(ek). Ha hiba fordul el\u0151, a callback els\u0151 argumentuma nem null vagy undefined, \xedgy a megh\xedv\xf3 f\xe9l ebb\u0151l k\xf6nnyen meg tudja \xe1llap\xedtani, hogy valami rendelleness\xe9g t\xf6rt\xe9nt. A m\xf3dszer el\u0151nye, hogy egys\xe9gesen, f\xfcggv\xe9nyh\xedv\xe1s szintj\xe9n val\xf3sul meg a hibakezel\xe9s, elker\xfclve a felesleges try-catch strukt\xfar\xe1kat."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"6. Az aszinkron megk\xf6zel\xedt\xe9s \xe9s hat\xe9konys\xe1g"})}),"\n",(0,n.jsx)(a.p,{children:"A callbackek aszinkron jellege k\xfcl\xf6nleges szeml\xe9letet k\xedv\xe1n. Sz\xe1mos helyzetben el\u0151sz\xf6r idegennek t\u0171nhet, hogy egy utas\xedt\xe1st nem k\xf6zvetlen\xfcl a soron k\xf6vetkez\u0151 k\xf3dr\xe9sz v\xe9grehajt\xe1sa k\xf6vet, hanem egy k\xfcls\u0151 f\xfcggv\xe9nyh\xedv\xe1s \xe1ltal meghat\xe1rozott pillanatban. Egy hosszabb adatlet\xf6lt\xe9s eset\xe9ben p\xe9ld\xe1ul a program r\xf6gt\xf6n tov\xe1bbhalad a t\xf6bbi utas\xedt\xe1sra, a let\xf6lt\xe9s v\xe9geredm\xe9ny\xe9nek kezel\xe9s\xe9t pedig a callback f\xfcggv\xe9nyben kell megoldani. Ez a m\u0171k\xf6d\xe9s hat\xe9konyabb er\u0151forr\xe1sfelhaszn\xe1l\xe1st eredm\xe9nyez, mert a folyamat nem blokkolja a f\u0151sz\xe1lat, \xe9s k\xf6zben m\xe1s m\u0171veletek tov\xe1bbra is futhatnak."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"7. P\xe9ld\xe1k h\xe9tk\xf6znapi haszn\xe1latra"})}),"\n",(0,n.jsx)(a.p,{children:"A h\xe9tk\xf6znapi haszn\xe1lat sor\xe1n gyakran el\u0151ker\xfcl a setTimeout vagy a setInterval, ahol a m\xe1sodik param\xe9ter\xfck maga a callback, ami az id\u0151z\xedt\u0151 vagy az intervallum lej\xe1rtakor aktiv\xe1l\xf3dik. Ilyenkor a megh\xedvott f\xfcggv\xe9ny meghat\xe1rozott id\u0151 eltelt\xe9vel fut, f\xfcggetlen\xfcl att\xf3l, hogy a k\xf3d t\xf6bbi r\xe9sze \xe9ppen milyen \xe1llapotban van. Ez kiv\xe1l\xf3an szeml\xe9lteti, mennyire rugalmasan vez\xe9relhet\u0151 a folyamat, \xe9s hogy mekkora mozg\xe1steret biztos\xedt a JavaScript aszinkron modellje."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"8. Esem\xe9nyvez\xe9relt programoz\xe1s \xe9s callbackek"})}),"\n",(0,n.jsx)(a.p,{children:"Az esem\xe9nyvez\xe9relt programoz\xe1s \xe9s a callbackek kapcsolata is nagyon szoros. Szinte minden modern JavaScript keretrendszer \xe9s eszk\xf6zk\xe9szlet \xe9p\xedt az esem\xe9nyek megfigyel\xe9s\xe9re, ahol a regisztr\xe1lt f\xfcggv\xe9nyek mindig valamilyen akci\xf3ra reag\xe1lnak (p\xe9ld\xe1ul kattint\xe1sra, \u0171rlap bek\xfcld\xe9s\xe9re vagy Ajax-k\xe9r\xe9s befejez\u0151d\xe9s\xe9re). Az esem\xe9nykezel\xe9s alapja, hogy a megfelel\u0151 ponton megh\xedv\xf3dik a kor\xe1bban \xe1tadott funkci\xf3, ami r\xf6gz\xedti \xe9s feldolgozza a be\xe9rkez\u0151 inform\xe1ci\xf3t."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"9. \xc1tl\xe1that\xf3s\xe1g \xe9s hibat\u0171r\xe9s"})}),"\n",(0,n.jsx)(a.p,{children:"Fontos megjegyezni, hogy a callbackek haszn\xe1latakor mindig oda kell figyelni a program logik\xe1j\xe1ra \xe9s a hibat\u0171r\xe9sre. Egy rosszul szervezett programban k\xf6nnyen el lehet veszni, ha minden r\xe9szfeladat saj\xe1t callbackeket kap, \xe9s azok m\xe9g bel\xfcl is t\xf6bb aszinkron m\u0171veletet ind\xedtanak el. A munkafolyamatok \xe1ttekint\xe9se \xe9s dokument\xe1l\xe1sa sokat seg\xedthet abban, hogy ezek a f\xfcggv\xe9nyek \xe1tl\xe1that\xf3an kapcsol\xf3djanak egym\xe1shoz, megel\u0151zve a felesleges k\xf3dduplik\xe1l\xe1st \xe9s a nehezen nyomon k\xf6vethet\u0151 hibakeres\xe9st."}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"10. A callbackek szerepe a JavaScript j\xf6v\u0151j\xe9ben"})}),"\n",(0,n.jsx)(a.p,{children:"A JavaScript callbackjei teh\xe1t remek megold\xe1st jelentenek az esem\xe9nyalap\xfa \xe9s aszinkron feladatok kivitelez\xe9s\xe9hez. Megfelel\u0151 szervez\xe9ssel biztons\xe1gos, modul\xe1ris \xe9s k\xf6nnyen b\u0151v\xedthet\u0151 strukt\xfar\xe1t lehet kialak\xedtani. Ez az alapot is megteremti a modernebb funkci\xf3knak, mint p\xe9ld\xe1ul a Promisek vagy az async\u2013await szintaxis, amelyek ugyan kifinomultabb form\xe1ban, de ugyanerre a funkcion\xe1lis elk\xe9pzel\xe9sre \xe9p\xfclnek. Ha a f\u0151 koncepci\xf3 meg\xe9rt\xe9sre ker\xfcl, m\xe1r csak a k\xfcl\xf6nb\xf6z\u0151 alkalmaz\xe1si ter\xfcleteken \xe9s k\xf6nyvt\xe1rakban felbukkan\xf3 vari\xe1ci\xf3khoz kell alkalmazkodni, illetve \xe9lni a nyelv tov\xe1bbi lehet\u0151s\xe9geivel a min\xe9l hat\xe9konyabb \xe9s \xe1tl\xe1that\xf3bb fejleszt\xe9s \xe9rdek\xe9ben."}),"\n",(0,n.jsxs)(t,{className:"dropdown-task",children:[(0,n.jsx)("summary",{children:"Gyakorlati p\xe9lda: Egy aszinkron \xfcdv\xf6zl\u0151 \xfczenet setTimeout haszn\xe1lat\xe1val"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'// 1. p\xe9lda: Egy aszinkron \xfcdv\xf6zl\u0151 \xfczenet setTimeout haszn\xe1lat\xe1val\r\n\r\nfunction sayHelloLater(callback) {\r\n  // A sayHelloLater f\xfcggv\xe9ny egy param\xe9terk\xe9nt kapott f\xfcggv\xe9nyt (callback) fog megh\xedvni k\xe9s\u0151bb\r\n  console.log("Indul a k\xe9sleltetett \xfcdv\xf6zl\xe9s...");\r\n  \r\n  setTimeout(function() {\r\n    // 3 m\xe1sodperc m\xfalva megh\xedvjuk a callbacket\r\n    callback("Szia, ez egy \xfcdv\xf6zl\xe9s!");\r\n  }, 3000);\r\n}\r\n\r\n// Itt meghat\xe1rozzuk, mit tegyen a callback, amikor megh\xedv\xf3dik\r\nsayHelloLater(function(message) {\r\n  console.log("A callback lefutott, \xedme az \xfczenet: " + message);\r\n});\n'})}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"R\xe9szletes le\xedr\xe1s:"})}),(0,n.jsxs)(a.p,{children:["A ",(0,n.jsx)(a.strong,{children:"sayHelloLater"})," f\xfcggv\xe9ny megh\xedv\xe1sakor m\xe9g nem t\xf6rt\xe9nik azonnali kimenet. A ",(0,n.jsx)(a.strong,{children:"setTimeout"})," seg\xedts\xe9g\xe9vel megadott id\u0151 eltelt\xe9vel (jelenleg h\xe1rom m\xe1sodperc) h\xedvja meg a f\xfcggv\xe9nyt, amelyet param\xe9terk\xe9nt \xe1tadtunk. A callback szerepe, hogy a k\xe9s\u0151bb be\xe9rkez\u0151 \xfczenetet megfelel\u0151en feldolgozza vagy ki\xedrja a konzolra. A k\xf3d j\xf3l szeml\xe9lteti, hogyan lehet elk\xfcl\xf6n\xedteni egy m\u0171veletet (k\xe9sleltetett \xfczenetk\xfcld\xe9s) \xe9s a r\xe1 \xe9rkez\u0151 reakci\xf3t (console.log megh\xedv\xe1sa) a JavaScript aszinkron mechanizmusaival."]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t,{className:"dropdown-task",children:[(0,n.jsx)("summary",{children:"Gyakorlati p\xe9lda: T\xf6mb elemeinek feldolgoz\xe1sa callbackkel"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'// 2. p\xe9lda: T\xf6mb elemeinek feldolgoz\xe1sa callbackkel\r\n\r\nfunction processArrayItems(items, callback) {\r\n  // A processArrayItems f\xfcggv\xe9ny megkap egy t\xf6mb\xf6t (items)\r\n  // \xe9s egy callback f\xfcggv\xe9nyt, amit minden elemre megh\xedv\r\n  items.forEach(function(item, index) {\r\n    // Minden egyes elemre megh\xedvjuk a callbacket,\r\n    // \xe1tadva a t\xf6mbelem \xe9rt\xe9k\xe9t \xe9s az indexet\r\n    callback(item, index);\r\n  });\r\n}\r\n\r\n// Ebben a p\xe9ld\xe1ban ki\xedrjuk a t\xf6mb elemeit a konzolra sorsz\xe1mozva\r\nconst myNumbers = [10, 20, 30, 40];\r\n\r\nprocessArrayItems(myNumbers, function(value, i) {\r\n  console.log(i + ". elem \xe9rt\xe9ke: " + value);\r\n});\n'})}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"R\xe9szletes le\xedr\xe1s:"})}),(0,n.jsxs)(a.p,{children:["A ",(0,n.jsx)(a.strong,{children:"processArrayItems"})," f\xfcggv\xe9ny tetsz\u0151leges t\xf6mb\xf6t \xe9s egy feldolgoz\xf3 f\xfcggv\xe9nyt (callback) kap param\xe9terk\xe9nt. A JavaScript be\xe9p\xedtett ",(0,n.jsx)(a.strong,{children:"forEach"})," met\xf3dus\xe1t haszn\xe1lva minden egyes elemn\xe9l megh\xedvja a callbacket, ezzel teljes rugalmass\xe1got biztos\xedtva a feldolgoz\xe1s m\xf3dj\xe1t illet\u0151en. A p\xe9ld\xe1ban egyszer\u0171en ki\xedrjuk a konzolra az indexet \xe9s az aktu\xe1lis elemet, de a callbackben b\xe1rmilyen logika megval\xf3sulhat: \xf6sszead\xe1s, sz\u0171r\xe9s, \xe1talak\xedt\xe1s vagy ak\xe1r r\xe9szletesebb statisztik\xe1k k\xe9sz\xedt\xe9se. Ez a megk\xf6zel\xedt\xe9s k\xf6nnyen testre szabhat\xf3 \xe9s j\xf3l \xe1tl\xe1that\xf3."]})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t,{className:"dropdown-task",children:[(0,n.jsx)("summary",{children:"Gyakorlati p\xe9lda: Egyszer\u0171 adatlek\xe9r\xe9s-szimul\xe1ci\xf3 callbackkel"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",children:'// 3. p\xe9lda: Egyszer\u0171 adatlek\xe9r\xe9s-szimul\xe1ci\xf3 callbackkel\r\n\r\nfunction fetchDataSimulated(callback) {\r\n  console.log("Adatlek\xe9r\xe9s folyamatban...");\r\n  \r\n  // Itt szimul\xe1lunk egy k\xe9sleltetett adat\xe1tvitelt\r\n  // Pl. mintha szerverr\u0151l j\xf6nne az inform\xe1ci\xf3\r\n  setTimeout(function() {\r\n    const fakeData = { id: 1, name: "Teszt Elem", status: "elk\xe9sz\xfclt" };\r\n    // Miut\xe1n "meg\xe9rkezett" az adat, megh\xedvjuk a callbacket\r\n    callback(fakeData);\r\n  }, 2000);\r\n}\r\n\r\nfetchDataSimulated(function(result) {\r\n  console.log("Az adat meg\xe9rkezett: ", result);\r\n  // Itt tetsz\u0151leges tov\xe1bbi feldolgoz\xe1st v\xe9gezhet\xfcnk\r\n});\n'})}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"R\xe9szletes le\xedr\xe1s:"})}),(0,n.jsxs)(a.p,{children:["A ",(0,n.jsx)(a.strong,{children:"fetchDataSimulated"})," f\xfcggv\xe9ny egy val\xf3s lek\xe9r\xe9s koncepci\xf3j\xe1t szeml\xe9lteti, de val\xf3j\xe1ban csak szimul\xe1lja a h\xe1l\xf3zati k\xe9sleltet\xe9st. A ",(0,n.jsx)(a.strong,{children:"setTimeout"})," feladata, hogy k\xe9t m\xe1sodpercnyi v\xe1rakoz\xe1s ut\xe1n megh\xedvja a callbacket, amely \xe1tveszi a \u201elet\xf6lt\xf6tt\u201d adatot. Ez egy tipikus alkalmaz\xe1si p\xe9lda JavaScriptben, ahol egy aszinkron m\u0171velet (szerverrel t\xf6rt\xe9n\u0151 kommunik\xe1ci\xf3) befejez\u0151d\xe9s\xe9t k\xf6vet\u0151en szeretn\xe9nk futtatni valamilyen k\xf3dot. Mivel a val\xf3di lek\xe9r\xe9s id\u0151z\xedt\xe9s\xe9t nem lehet pontosan el\u0151re megmondani, a callback seg\xedts\xe9g\xe9vel k\xf6nnyen megadhat\xf3, hogy mik\xe9pp dolgozza fel a program az id\u0151k\xf6zben be\xe9rkez\u0151 inform\xe1ci\xf3kat."]})]})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>o});var l=t(6540);const n={},s=l.createContext(n);function r(e){const a=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),l.createElement(s.Provider,{value:a},e.children)}}}]);